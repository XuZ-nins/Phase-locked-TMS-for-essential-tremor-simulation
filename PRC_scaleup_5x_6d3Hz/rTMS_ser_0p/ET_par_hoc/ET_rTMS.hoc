/* Author: Xu Zhang @UConn, Jan., 2020
This script runs under tremor condition without TMS.
*/

load_file("nrngui.hoc")

load_file("rngRead.hoc") // Load rng seeds
noiseSwitch=1 // Membrane and synaptic noises, 1/0 = turn on/off

// Loading individual cells
load_file("cell_ION.hoc")
load_file("cell_PC.hoc")
load_file("cell_DCN.hoc")
load_file("cell_TC.hoc")
load_file("cell_MC.hoc")

// Loading synaptic connections
load_file("syn_ION_PC.hoc")
load_file("syn_PC_DCN.hoc")
load_file("syn_DCN_ION.hoc")
load_file("syn_DCN_TC.hoc")
load_file("syn_TC_MC.hoc")
load_file("syn_MC_GrL.hoc")
load_file("syn_GrL_PC.hoc")

// One typical ET condition (tau = 12, R = 0.7)
PCDCNtaurnd = 682
PCDCNgrnd = 198
objref rngPCDCNtau, PCDCNg
rngPCDCNtau = new Random(PCDCNtaurnd)
rngPCDCNtau.normal(12,4)
PCDCNg = new Random(PCDCNgrnd)
PCDCNg.normal(0.7,0.0196)
for i = 0,999 {
	PC2DCN_syn[i].tau = rngPCDCNtau.repick()
	PC2DCN_syn[i].g = PC2DCN_syn[i].g*PCDCNg.repick()
}

// Push ION into oscillations; trigger tremor onset
objref stimION[200]
for i = 0,199 {
	IONcell[i] stimION[i] = new IClamp(0.5)
	stimION[i].amp = 1e-2
	stimION[i].del = 1000
	stimION[i].dur = 20
}
access DCNcell

objref f_trialname
f_trialname = new File()
f_trialname.ropen("trialname_par.txt")

strdef f_PCap, f_IONap, f_DCNap, f_Vimap
f_trialname.scanstr(f_PCap)
f_trialname.scanstr(f_IONap)
f_trialname.scanstr(f_DCNap)
f_trialname.scanstr(f_Vimap)
f_trialname.close()

v_init = -57
dt = 0.0125
tstop = 30000
init()

objref ss,f_ss
ss = new SaveState()
f_ss = new File("currentState.dat")
ss.fread(f_ss)
ss.restore()
f_ss.close()

objref f_IONapparams
f_IONapparams= new File()
f_IONapparams.ropen("IONparams.txt")
IONparam = f_IONapparams.scanvar()
f_IONapparams.close()

for i = 0,199 {stimION[i].del = IONparam}

// Record PC
	objref apc_PC[1000], apPC[1000]
	for i = 0,999 {
	PCcell[i] apc_PC[i] = new APCount(0.5)
	apc_PC[i].thresh = -45
	apPC[i] = new Vector()
	apc_PC[i].record(apPC[i])
}

// Record DCN
objref apc_DCN[25], apDCN[25]
for i = 0,24 {
	DCNcell[i] apc_DCN[i] = new APCount(0.5)
	apc_DCN[i].thresh = -45
	apDCN[i] = new Vector()
	apc_DCN[i].record(apDCN[i])
}

// Record Vim
objref apc_Vim[25], apVim[25]
for i = 0,24 {
	TCcell[i] apc_Vim[i] = new APCount(0.5)
	apc_Vim[i].thresh = -45
	apVim[i] = new Vector()
	apc_Vim[i].record(apVim[i])
}

// Record ION
objref apc_ION[200], apION[200]
for i = 0,199 {
	IONcell[i] apc_ION[i] = new APCount(0.5)
	apc_ION[i].thresh = -45
	apION[i] = new Vector()
	apc_ION[i].record(apION[i])
}

continuerun(t+tstop)
//																//
//////////////////////////////////////////////////////////////////

// Save PC
objref rec_PC
rec_PC = new File()
rec_PC.wopen(f_PCap)
for i = 0,999 {
    if (apPC[i].size()>0) {
        for j = 0,apPC[i].size()-1 {
            rec_PC.printf("%d,%f\n",i,apPC[i].x[j])
		}
    }
}
rec_PC.close()

// Save DCN
objref rec_DCN
rec_DCN = new File()
rec_DCN.wopen(f_DCNap)
for i = 0,24 {
    if (apDCN[i].size()>0) {
        for j = 0,apDCN[i].size()-1 {
            rec_DCN.printf("%d,%f\n",i,apDCN[i].x[j])
        }
    }
}
rec_DCN.close()

// Save Vim
objref rec_Vim
rec_Vim = new File()
rec_Vim.wopen(f_Vimap)
for i = 0,24 {
    if (apVim[i].size()>0) {
        for j = 0,apVim[i].size()-1 {
            rec_Vim.printf("%d,%f\n",i,apVim[i].x[j])
        }
    }
}
rec_Vim.close()

// Save ION
objref rec_ION
rec_ION = new File()
rec_ION.wopen(f_IONap)
for i = 0,199 {
    if (apION[i].size()>0) {
        for j = 0,apION[i].size()-1 {
            rec_ION.printf("%d,%f\n",i,apION[i].x[j])
        }
    }
}
rec_ION.close()

quit()
